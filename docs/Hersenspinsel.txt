We hebben nu een behoorlijke omweg ontworpen voor de vier flow initiatie events en hoewel dit heel goed kan werken, hebben we zeker 3 extra hele domme parsers geintroduceert, naast de TickCache manager. Verder hebben we de OperationService bus verantwoordelijkheden (queue) gegeven.

Dit gaat de verkeerde kan op. Ik heb me een beejte mee laten slepen door jou enthausiasme gisteren, met als gevolg een verzameling designs die voorbij gaan aan mijn platform eisen.

Ik heb een aantal andere inzichten:

- We hebben momenteel 4 bronnen 'bedacht' die een flow/run start kunnen initieren.
- Hiertussenin hebben we de OperationService een centrale rol gegeven, die deze zaken gaat verzamelen, slimme dingen ermee gaat doen (queueen) en vervolgens als deelnemer zelf aan de eventbus meedoen.

Verder is er een fout geslopen in de gedachte dat een plugin in zijn manifest event bedrading moet specificeren. Dit is een grove schending van srp en maakt de standaard plugin event aware. Dit MOETEN we veranderen.

Hierop is een uitzondering denkbaar en dat is de Event Aware plugin. Dit is een bijzondere plugin, die in staat is om op meer dan 1 event te reageren Ã©n meer dan 1 event te kunnen veroorzaken. Deze is eerder in het leven geroepen om complexe (op dit moment) nog niet bedachte plugins (types) te kunnen faciliteren. Ik heb er over getwijfeld om dit nog toe te staan en hier een brainstorm over gehad met je. Ik kan me niet precies meer alle scenario's voor de geest halen die we toen bedachten, maar volgens mij waren het eigenlijk allemaal variaties op de rol van Strategy Planner.

Voorbeeld smart DCA strategy planner:
- Luistert naar daily tick (afkomstig van scheduler)
- Luistert ook naar andere events om het gunstigste moment op de dag proberen te timen
- Koopt elke dag ongeachte of er een gunstig moment is geweest

Wat naar mijn idee